apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'bintray'

sourceCompatibility = 1.8
version = '1.0'

group = 'com.ofg'
description = 'Microservice dependency manager'
version = '0.0.1-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://jcenter.bintray.com' }
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
    }
}

repositories {
    mavenLocal()
    maven { url 'http://jcenter.bintray.com' }
    mavenCentral()
}

ext {
    groovyVersion = '2.3.2'
    spockVersion = '0.7-groovy-2.0'
    curatorVersion = '2.5.0'
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:$groovyVersion:indy"

    compile("org.apache.curator:curator-x-discovery:$curatorVersion") {
        exclude group: 'org.slf4j'
        exclude group: 'log4j'
    }

    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    testCompile("org.apache.curator:curator-test:$curatorVersion") {
        exclude group: 'org.slf4j'
        exclude group: 'log4j'
    }
}

bintrayUpload.dependsOn 'build'

publishing {
    publications {
        plugin(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

bintray {
    user = System.properties['bintrayUser']
    key = System.properties['bintrayKey']
    publications = ['plugin']
    pkg {
        repo = 'micro-deps'
        userOrg = 'szimano'
        name = 'micro-deps'
        desc = 'Library for managing microservice dependencies using Apache Curator'
        licenses = ['Apache-2.0']
        labels = ['microservice']
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}