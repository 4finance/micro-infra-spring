buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
        classpath 'com.ofg:uptodate-gradle-plugin:1.0.0'
        if (project.hasProperty("coverage")) { classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0' }
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.ofg.uptodate'

sourceCompatibility = 1.7

group = 'com.ofg'
description = 'Microservice dependency manager'
version = '0.5.4'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    groovyVersion = '2.3.6'
    spockVersion = '0.7-groovy-2.0'
    curatorVersion = '2.6.0'
    undertowVersion = '1.0.15.Final'
}

configurations {
    compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
    compile.exclude group: "org.slf4j", module: "log4j-over-slf4j"
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:$groovyVersion:indy"
    compile "org.apache.curator:curator-x-discovery:$curatorVersion"
    compile "org.apache.curator:curator-test:$curatorVersion"
    compile 'org.jboss.resteasy:resteasy-undertow:3.0.8.Final'
    compile "io.undertow:undertow-core:$undertowVersion"
    compile "io.undertow:undertow-servlet:$undertowVersion"
    compile 'org.apache.ivy:ivy:2.3.0'
    compile 'args4j:args4j:2.0.29'
    compile 'com.google.guava:guava:17.0'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'

    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    testCompile ('com.jayway.awaitility:awaitility-groovy:1.6.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

bintrayUpload.dependsOn 'build'

bintray {
    user = System.properties['bintrayUser']
    key = System.properties['bintrayKey']

    publications = ['mavenJava']
    pkg {
        repo = 'micro-deps'
        userOrg = '4finance'
        name = 'micro-deps'
        desc = 'Library for managing microservice dependencies using Apache Curator'
        licenses = ['Apache-2.0']
        labels = ['microservice']
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

if(project.hasProperty("coverage")) {
    apply plugin: 'codenarc'
    apply plugin: 'jacoco'
    apply plugin: 'sonar-runner'
    apply plugin: 'com.github.kt3k.coveralls'

    jacoco {
        toolVersion = "0.7.0.201403182114"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }

    codenarc {
        configFile = file('config/codenarc/rules.groovy')
        maxPriority1Violations = 0
        maxPriority2Violations = 6
        maxPriority3Violations = 10
        reportFormat = 'xml'
        ignoreFailures = true
    }

    dependencies {
        codenarc 'org.codenarc:CodeNarc:0.21'
    }

    test {
        ignoreFailures = true
        jacoco {
            excludes = ['.*Configuration.*']
        }
    }

    sonarRunner {
        sonarProperties {
            //TODO: fill this
        }
    }
}
