buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.1.8.RELEASE'
        classpath 'com.ofg:uptodate-gradle-plugin:+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
        if (project.hasProperty("coverage")) { classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:+' }
    }
}

ext {
    microInfraSpringVersion = '0.5.3-SNAPSHOT'

    groovyVersion = '2.3.7'
    spockVersion = '0.7-groovy-2.0'
    springBootVersion = '1.1.8.RELEASE'
    springTestVersion = '4.1.1.RELEASE'
}

allprojects {
    group = 'com.ofg'
    version = microInfraSpringVersion
}

task addHashFile << {
    String gitCmd = "git log --pretty=format:'%H' -n 1"
    def proc = gitCmd.execute()
    proc.waitFor()
    new File("commitHash.txt").withWriter { it << proc.in.text }
}

configure(subprojects - project(':swagger')) {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.ofg.uptodate'

    sourceCompatibility = 1.7

    repositories {
        mavenLocal()
        jcenter()
    }

    //Workaround for the issue with Java 8u11 and 7u65 - http://www.infoq.com/news/2014/08/Java8-U11-Broke-Tools
    test {
        jvmArgs '-noverify'
    }

    bintrayUpload.dependsOn 'build'

    bintray {
        user = System.properties['bintrayUser']
        key = System.properties['bintrayKey']

        publications = ['mavenJava']
        pkg {
            repo = 'micro'
            userOrg = '4finance'
            name = project.name
            desc = project.description
            licenses = ['Apache-2.0']
            labels = ['microservice']
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    jar {
        dependsOn addHashFile
        from "commitHash.txt"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: groovydoc) {
        classifier = 'javadoc'
        from groovydoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    if(project.hasProperty("coverage")) {
        apply plugin: 'jacoco'
        apply plugin: 'com.github.kt3k.coveralls'

        jacoco {
            toolVersion = '0.7.1.201405082137'
        }

        jacocoTestReport {
            reports {
                xml.enabled = true // coveralls plugin depends on xml format report
                html.enabled = true
            }
        }

        test {
            ignoreFailures = true
            jacoco {
                excludes = ['*Configuration']
            }
        }
    }
}